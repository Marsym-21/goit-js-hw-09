{"mappings":"YAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,UACxCF,EAAKI,iBAAiB,SAItB,SAA2BC,GACzB,MAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BC,EAASH,GAAQE,EACbA,EAAQ,GACVL,EAASO,gBAAgB,YAE3B,GAAIF,EAAQ,EAEV,OADAL,EAASQ,aAAa,WAAY,IAC3BC,MAAM,oCAEjB,IAdAZ,EAAKI,iBAAiB,UAkBtB,SAAqBC,GACnBA,EAAMQ,iBAEN,IAAIC,EAAaC,OAAON,EAASO,OACjCC,EAAUC,aAAY,KAyBxB,IAAsBC,EAAMC,EAXLC,EAAUL,EAb7BM,GAAS,EAwBSH,EAvBLG,EAuBWF,EAvBJL,OAAON,EAASW,QAwBlCD,IAASC,GACXG,cAAcN,GAxBdH,GAAcC,OAAON,EAASe,OAWXH,EAVLZ,EAASW,OAUMJ,EAVEF,EAW1B,IAAIW,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEL,E,MAAUL,IAEpBW,EAAO,C,SAAEN,E,MAAUL,GAAM,KAfxBc,MAAK,EAACT,SAAEA,EAAQL,MAAEA,MACjBe,QAAQC,IAAI,uBAAuBX,QAAeL,MAAS,IAE5DiB,OAAM,EAACZ,SAAEA,EAAQL,MAAEA,MAClBe,QAAQC,IAAI,sBAAsBX,QAAeL,MAAS,GAC5D,GACDF,EACL,IAhCA,MAAML,EAAW,CAAC,EAalB,IAAIQ,EAAU,EACVK,EAAQ,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst startBtn = document.querySelector('button');\nform.addEventListener('input', checkedInputValue);\nform.addEventListener('submit', clickSubmit);\n\nconst formData = {};\nfunction checkedInputValue(event) {\n  const name = event.target.name;\n  const value = event.target.value;\n  formData[name] = value;\n  if (value > 0) {\n    startBtn.removeAttribute('disabled');\n  }\n  if (value < 0) {\n    startBtn.setAttribute('disabled', '');\n    return alert('Please enter data greater than 0!');\n  }\n}\nlet timerId = 0;\nlet timer = 0;\n\nfunction clickSubmit(event) {\n  event.preventDefault();\n\n  let countDelay = Number(formData.delay);\n  timerId = setInterval(() => {\n    timer += 1;\n    StopInterval(timer, Number(formData.amount));\n    countDelay += Number(formData.step);\n    createPromise(formData.amount, countDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, countDelay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction StopInterval(time, amount) {\n  if (time === amount) {\n    clearInterval(timerId);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$startBtn","addEventListener","event","name","target","value","$ce04d3a99e08e73b$var$formData","removeAttribute","setAttribute","alert","preventDefault","countDelay","Number","delay","$ce04d3a99e08e73b$var$timerId","setInterval","time","amount","position","$ce04d3a99e08e73b$var$timer","clearInterval","step","Promise","resolve","reject","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.2e134423.js.map"}